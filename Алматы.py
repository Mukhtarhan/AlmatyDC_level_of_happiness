import streamlit as st
import pandas as pd
import base64
import plotly.express as px
import pydeck as pdk
from almaty_lang_function import eng_lang_almaty
from almaty_lang_function import en_info_almaty
from almaty_lang_function_kz import kz_lang_almaty
from almaty_lang_function_kz import kz_info_almaty
import streamlit.components.v1 as components





#path streamlit run D:\Projects\Happiness_level_of_population_in_Almaty\pythonProject\–ê–ª–º–∞—Ç—ã.py




#–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —è–∑—ã–∫–∞
language = st.sidebar.selectbox('–Ø–∑—ã–∫/Language/–¢—ñ–ª:', ['–†—É—Å—Å–∫–∏–π', 'English', '“ö–∞–∑–∞“õ'])
st.sidebar.markdown("---")



#–î–∏–∑–∞–π–Ω –±–æ–∫–æ–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω
st.markdown(
    """
    <style>
    .cover-glow {
        width: 180px;
        height: auto;
        padding: 3px;
        box-shadow: 
            0 0 5px #330000,
            0 0 10px #660000,
            0 0 15px #990000,
            0 0 20px #CC0000,
            0 0 25px #FF0000,
            0 0 30px #FF3333,
            0 0 35px #FF6666;
        position: relative;
        z-index: -1;
        border-radius: 30px;  /* Rounded corners */
    }
    </style>
    """,
    unsafe_allow_html=True,
)

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–∞—Ä—Ç–∏–Ω
def img_to_base64(image_path):
    with open(image_path, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()

# #–í–≤–µ—Ä—Ö–Ω—è—è –±–æ–∫–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∞
img_path = "AlmatyDC_level_of_happiness\open.png"
img_base64 = img_to_base64(img_path)
st.sidebar.markdown(
    f'<a href="https://almatydc.kz/"><img src="data:image\png;base64,{img_base64}" class="cover-glow"></a>',
    unsafe_allow_html=True,
)

#–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ
if language == "–†—É—Å—Å–∫–∏–π":
    st.sidebar.markdown("---")
    on = st.sidebar.toggle("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ:", True)
    if on:
        sidebar_text_container = st.sidebar.container()
        with sidebar_text_container:
            st.write("**–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ—Ä—Ç–∞–ª, –ø–æ—Å–≤—è—â–µ–Ω–Ω—ã–π –ê–ª–º–∞—Ç—ã!**")
            st.markdown("–ù–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –º—ã —É–¥–µ–ª—è–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö –æ —Å–ª–µ–¥—É—é—â–∏—Ö –∞—Å–ø–µ–∫—Ç–∞—Ö –∂–∏–∑–Ω–∏ –≤ –ê–ª–º–∞—Ç—ã:")
            st.markdown("**–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è**: –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –¥–∏–Ω–∞–º–∏–∫—É –∏–Ω–¥–µ–∫—Å–∞ —Å—á–∞—Å—Ç—å—è –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ –µ–≥–æ —Å –¥—Ä—É–≥–∏–º–∏ —Ä–∞–π–æ–Ω–∞–º–∏ –ê–ª–º–∞—Ç—ã.")
            st.markdown("**–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞**: –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —É—Ä–æ–≤–µ–Ω—å –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã.")
            st.markdown("**–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤**: –°–ª–µ–¥–∏—Ç–µ –∑–∞ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π –≤ –≥–æ—Ä–æ–¥–µ –∏ –±—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —É—Ä–æ–≤–Ω—è –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏—è –≤–æ–∑–¥—É—Ö–∞.")
            st.markdown("**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏**: –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —É—Ä–æ–≤–Ω—è –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –≥–æ—Ä–æ–¥–∞ –∏ –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –æ —Å–≤–æ–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.")
            st.markdown("**–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏**: –£–∑–Ω–∞–π—Ç–µ –æ —Å—Ä–µ–¥–Ω–µ–π –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∂–∏–∑–Ω–∏ –≤ –≥–æ—Ä–æ–¥–µ.")
            st.markdown("**–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º**: –ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —É—Å–ª—É–≥, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–≥–æ –¥–ª—è –∂–∏–∑–Ω–∏ –≤ –ê–ª–º–∞—Ç—ã.")
            st.markdown("**–¶–µ–Ω—ã —Ä—ã–Ω–∫–∞ –∂–∏–ª—å—è**: –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –¥–∏–Ω–∞–º–∏–∫—É —Ü–µ–Ω –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –≥–æ—Ä–æ–¥–∞ –∏ –¥–µ–ª–∞–π—Ç–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –Ω–∞ –±—É–¥—É—â–µ–µ.")
            st.markdown("**–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞**: –£–∑–Ω–∞–π—Ç–µ –æ —Å—Ä–µ–¥–Ω–µ–º —É—Ä–æ–≤–Ω–µ –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã –≤ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–π–æ–Ω–∞—Ö –≥–æ—Ä–æ–¥–∞.")

elif language == "English":
    en_info_almaty()
elif language == "“ö–∞–∑–∞“õ":
    kz_info_almaty()


#–ì–ª–∞–≤–Ω–∞—è —á–∞—Å—Ç—å
if language == "–†—É—Å—Å–∫–∏–π":
    st.markdown("<h1 style = 'text-align: center;'>–î–∞–Ω–Ω—ã–µ –ì–æ—Ä–æ–¥–∞ –ê–ª–º–∞—Ç—ã üçé</h1>", unsafe_allow_html=True)
    st.markdown("---")
    df = pd.read_excel("AlmatyDC_level_of_happiness\DataBase_for_Project\–ê–ª–º–∞—Ç—ã.xlsx")
    option = st.selectbox("–í—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä: ", (
    "–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏",
    "–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏", "–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º", "–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è", "–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞"))
    if option == "–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è":
        with st.container(height=490, border=True):
            fig_hs = px.line(df, x="–ì–æ–¥", y="–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è")
            st.plotly_chart(fig_hs, use_container_width=True)
    elif option == "–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞":
        with st.container(height=490, border=True):
            fig_ur = px.line(df, x="–ì–æ–¥", y="–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞")
            st.plotly_chart(fig_ur, use_container_width=True)
    elif option == "–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤":
        with st.container(height=490, border=True):
            fig_pl = px.line(df, "–ì–æ–¥", "–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤")
            st.plotly_chart(fig_pl, use_container_width=True)
    elif option == "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏":
        with st.container(height=490, border=True):
            fig_cr = px.pie(df, "–ì–æ–¥", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)
    elif option == "–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏":
        with st.container(height=490, border=True):
            fig_le = px.scatter(df, x="–ì–æ–¥", y="–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            st.plotly_chart(fig_le, use_container_width=True)
    elif option == "–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º":
        with st.container(height=490, border=True):
            fig_lw = px.bar(df, x="–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)
    elif option == "–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è":
        with st.container(height=490, border=True):
            fig_hp = px.bar(df, x="–ì–æ–¥", y="–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            st.plotly_chart(fig_hp, use_container_width=True)
    elif option == "–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞":
        with st.container(height=490, border=True):
            fig_in = px.line(df, x="–ì–æ–¥", y="–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            st.plotly_chart(fig_in, use_container_width=True)
    #–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    st.sidebar.markdown("---")
    #–ù–∏–∂–Ω—è—è –∫–∞—Ä—Ç–∏–Ω–∞ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    img_path = "AlmatyDC_level_of_happiness\gh7.jpg"  # Replace with the actual image path
    img_base64 = img_to_base64(img_path)
    st.sidebar.markdown(
        f'<a href="https://github.com/aydarbek30/AlmatyDC_level_of_happiness"><img src="data:image\png;base64,{img_base64}" class="cover-glow"></a>',
         unsafe_allow_html=True,
    )
    #–†–µ–∫–≤–µ–∑–∏—Ç—ã
    st.sidebar.markdown("---")
    st.sidebar.markdown('''<small>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç | –ò—é–Ω—å-–ò—é–ª—å 2024 | –ê–π–¥–∞—Ä–±–µ–∫, –ê—Å–∞–Ω, –ú—É—Ö—Ç–∞—Ä—Ö–∞–Ω</small>''',
                                unsafe_allow_html=True)
#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–≥–ª –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
elif language == "English":
    eng_lang_almaty()
elif language == "“ö–∞–∑–∞“õ":
    kz_lang_almaty()

s



#–∫–∞—Ä—Ç–∞ –∞–ª–º–∞—Ç—ã
if language == "–†—É—Å—Å–∫–∏–π":
    st.markdown("<h1 style = 'text-align: center;'>–ö–∞—Ä—Ç–∞ –†–∞–π–æ–Ω–æ–≤ –ê–ª–º–∞—Ç—ã üó∫Ô∏è</h1>", unsafe_allow_html=True)
    with open("AlmatyDC_level_of_happiness\webmap.html", "r", encoding="utf-8") as f:
        map_html = f.read()
        components.html(map_html, height=600)
