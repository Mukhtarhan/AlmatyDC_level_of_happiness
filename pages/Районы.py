import streamlit as st
import pandas as pd
import base64
import plotly.express as px
from districts_lang_function import eng_lang_district
from districts_lang_function_kz import kz_lang_district



#–°–≤–∏—Ç—á–µ—Ä —è–∑—ã–∫–æ–≤ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
language = st.sidebar.selectbox('–Ø–∑—ã–∫/Language/–¢—ñ–ª:', ['–†—É—Å—Å–∫–∏–π', 'English', '“ö–∞–∑–∞“õ'])
st.sidebar.markdown("---")



#–î–∏–∑–∞–π–Ω –±–æ–∫–æ–≤—ã—Ö –∫–∞—Ä—Ç–∏–Ω
st.markdown(
    """
    <style>
    .st-emotion-cache-1gv3huu {
        background-color: bisque;
    }
    .st-emotion-cache-12fmjuu {
        background-color: #fff7ed;
    }
    .st-emotion-cache-bm2z3a {
        background-color: #fff7ed;
    }
    .cover-glow {
        width: 180px;
        height: auto;
        padding: 3px;
        box-shadow: 
            0 0 5px #330000,
            0 0 10px #660000,
            0 0 15px #990000,
            0 0 20px #CC0000,
            0 0 25px #FF0000,
            0 0 30px #FF3333,
            0 0 35px #FF6666;
        position: relative;
        z-index: -1;
        border-radius: 30px;  /* Rounded corners */
    }
    </style>
    """,
    unsafe_allow_html=True,
)

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–∞—Ä—Ç–∏–Ω
def img_to_base64(image_path):
    with open(image_path, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()

#–í–≤–µ—Ä—Ö–Ω—è—è –±–æ–∫–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∞
img_path = "AlmatyDC_level_of_happiness\open.png"
img_base64 = img_to_base64(img_path)
st.sidebar.markdown(
    f'<a href="https://almatydc.kz/"><img src="data:image/png;base64,{img_base64}" class="cover-glow"></a>',
    unsafe_allow_html=True,
)
st.sidebar.markdown("---")


#–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
if language == "–†—É—Å—Å–∫–∏–π":
    st.sidebar.subheader("–î–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–º —Ä–∞–π–æ–Ω–µ:")
    opt = st.sidebar.radio('–í—ã–±—Ä–∞—Ç—å —Ä–∞–π–æ–Ω: ', options=
    [
        '–ê–ª–∞—Ç–∞—É—Å–∫–∏–π',
        '–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π',
        '–ê—É—ç–∑–æ–≤—Å–∫–∏–π',
        '–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π',
        '–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π',
        '–ú–µ–¥–µ—É—Å–∫–∏–π',
        '–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π',
        '–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π'])


    #–†–ê–ô–û–ù–´
    df1 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è.xlsx')
    df2 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏.xlsx')
    df3 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞.xlsx')
    df4 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞.xlsx')
    df5 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º.xlsx')
    df6 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è.xlsx')
    df7 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.xlsx')
    df8 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project\–í—ã–±—Ä–æ—Å—ã –∂–∏–¥–∫–∏—Ö –∏ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤.xlsx')

    #–ê–ª–∞—Ç–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ê–ª–∞—Ç–∞—É—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ê–ª–∞—Ç–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)


        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "5,7", "+0,4")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "4,4%", "-0,7%", delta_color="inverse")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "29,7", "+0,2", delta_color="inverse")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ê–ª–∞—Ç–∞—É—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ê–ª–∞—Ç–∞—É—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ê–ª–∞—Ç–∞—É—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ê–ª–∞—Ç–∞—É—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ê–ª–∞—Ç–∞—É—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "5,5", "+0,4")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "4,7%", "-0,1%", delta_color="inverse")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "0,2", "0", delta_color="off")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–ê—É—ç–∑–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ê—É—ç–∑–æ–≤—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ê—É—ç–∑–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "5,8", "+0,6")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "4,4%", "-0,7%", delta_color="inverse")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "0,9", "-0,1", delta_color="inverse")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ê—É—ç–∑–æ–≤—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ê—É—ç–∑–æ–≤—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ê—É—ç–∑–æ–≤—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ê—É—ç–∑–æ–≤—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ê—É—ç–∑–æ–≤—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "6,1", "+0,6")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "8,3%", "0%", delta_color="off")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "1,4", "+0,7", delta_color="inverse")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "6,4", "+1,1")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "4,8%", "-0,2%", delta_color="inverse")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "1,7", "+0,2", delta_color="inverse")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–ú–µ–¥–µ—É—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ú–µ–¥–µ—É—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ú–µ–¥–µ—É—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "6,8", "+0,9")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "6,3%", "0%", delta_color="off")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "0,2", "-0,1", delta_color="inverse")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ú–µ–¥–µ—É—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ú–µ–¥–µ—É—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ú–µ–¥–µ—É—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ú–µ–¥–µ—É—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ú–µ–¥–µ—É—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "6,3", "+0,5")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "4,7%", "-0,6%", delta_color="inverse")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "0,3", "0", delta_color="off")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)


    #–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π —Ä–∞–π–æ–Ω üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")

        col7, col8 = st.columns(2)

        col4.metric("–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è", "7,3", "+0,5")
        col5.metric("–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞", "5%", "+0,1%", delta_color="inverse")
        col6.metric("–í—ã–±—Ä–æ—Å—ã –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤", "1,4", "-0,1", delta_color="inverse")

        with col1:
            st.subheader("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏")
            fig_cr = px.pie(df7, "–ì–æ–¥", "–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏")
            fig_in = px.scatter(df2, x="–ì–æ–¥", y="–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º")
            fig_lw = px.bar(df5, x="–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π", y="–ì–æ–¥", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è")
            fig_hp = px.line(df1, "–ì–æ–¥", "–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞")
            fig_in = px.line(df4, x="–ì–æ–¥", y="–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)
    #–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    st.sidebar.markdown("---")
    #–ù–∏–∂–Ω—è—è –±–æ–∫–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∞
    img_path = "AlmatyDC_level_of_happiness\gh7.jpg"  # Replace with the actual image path
    img_base64 = img_to_base64(img_path)
    st.sidebar.markdown(
        f'<img src="data:image/png;base64,{img_base64}" class="cover-glow">',
        unsafe_allow_html=True,
    )
    st.sidebar.markdown("---")
    st.sidebar.markdown('''<small>–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç | –ò—é–Ω—å-–ò—é–ª—å 2024 | –ê–π–¥–∞—Ä–±–µ–∫, –ê—Å–∞–Ω, –ú—É—Ö—Ç–∞—Ä—Ö–∞–Ω</small>''',
                        unsafe_allow_html=True)


elif language == "English":
    eng_lang_district()
elif language == "“ö–∞–∑–∞“õ":
    kz_lang_district()











