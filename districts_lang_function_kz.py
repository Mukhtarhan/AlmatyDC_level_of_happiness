import streamlit as st
import pandas as pd
import base64
import plotly.express as px





#–ë–æ–∫–æ–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∞
st.markdown(
    """
    <style>
    .cover-glow {
        width: 180px;
        height: auto;
        padding: 3px;
        box-shadow: 
            0 0 5px #330000,
            0 0 10px #660000,
            0 0 15px #990000,
            0 0 20px #CC0000,
            0 0 25px #FF0000,
            0 0 30px #FF3333,
            0 0 35px #FF6666;
        position: relative;
        z-index: -1;
        border-radius: 30px;  /* Rounded corners */
    }
    </style>
    """,
    unsafe_allow_html=True,
)


#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–∞—Ä—Ç–∏–Ω—ã
def img_to_base64(image_path):
    with open(image_path, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()


#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–π –ö–ó —á–∞—Å—Ç–∏
def kz_lang_district():
    st.sidebar.subheader("”ò—Ä –∞—É–¥–∞–Ω –±–æ–π—ã–Ω—à–∞ –¥–µ—Ä–µ–∫—Ç–µ—Ä:")
    opt = st.sidebar.radio('–ê–π–º–∞“õ—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑: ', options=
    [
        '–ê–ª–∞—Ç–∞—É',
        '–ê–ª–º–∞–ª—ã',
        '”ò—É–µ–∑–æ–≤—Å–∫–∏–π',
        '–ë–æ—Å—Ç–∞–Ω–¥—ã“õ',
        '–ñ–µ—Ç—ñ—Å—É',
        '–ú–µ–¥–µ—É',
        '–ù–∞—É—Ä—ã–∑–±–∞–π',
        '–¢“Ø—Ä–∫—Å—ñ–±'])

    #–†–∞–π–æ–Ω—ã
    df1 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–¶–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ –∂–∏–ª—å—è_–∫–∑.xlsx')
    df2 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å –∂–∏–∑–Ω–∏_–∫–∑.xlsx')
    df3 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞_–∫–∑.xlsx')
    df4 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞_–∫–∑.xlsx')
    df5 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–ü—Ä–æ–∂–∏—Ç–æ—á–Ω—ã–π –º–∏–Ω–∏–º—É–º_–∫–∑.xlsx')
    df6 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–£—Ä–æ–≤–µ–Ω—å —Å—á–∞—Å—Ç—å—è_–∫–∑.xlsx')
    df7 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏_–∫–∑.xlsx')
    df8 = pd.read_excel('AlmatyDC_level_of_happiness\DataBase_for_Project_–∫–∞–∑–∞–∫\–í—ã–±—Ä–æ—Å—ã –∂–∏–¥–∫–∏—Ö –∏ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∑–∞–≥—Ä—è–∑–Ω—è—é—â–∏—Ö –≤–µ—â–µ—Å—Ç–≤_–∫–∑.xlsx')

    #–ê–ª–∞—Ç–∞—É—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ê–ª–∞—Ç–∞—É":
        st.markdown("<h1 style = 'text-align: center;'>–ê–ª–∞—Ç–∞—É –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "5,7", "+0,4")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "4,4%", "-0,7%", delta_color="inverse")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "29,7", "+0,2", delta_color="inverse")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–ê–ª–∞—Ç–∞—É", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–ê–ª–∞—Ç–∞—É")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–ê–ª–∞—Ç–∞—É", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–ê–ª–∞—Ç–∞—É")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–ê–ª–∞—Ç–∞—É")
            st.plotly_chart(fig_in, use_container_width=True)

    #–ê–ª–º–∞–ª–∏–Ω—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ê–ª–º–∞–ª—ã":
        st.markdown("<h1 style = 'text-align: center;'>–ê–ª–º–∞–ª—ã –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "5,5", "+0,4")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "4,7%", "-0,1%", delta_color="inverse")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "0,2", "0", delta_color="off")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–ê–ª–º–∞–ª—ã", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–ê–ª–º–∞–ª—ã")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–ê–ª–º–∞–ª—ã", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–ê–ª–º–∞–ª—ã")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–ê–ª–º–∞–ª—ã")
            st.plotly_chart(fig_in, use_container_width=True)

    #–ê—É—ç–∑–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "”ò—É–µ–∑–æ–≤—Å–∫–∏–π":
        st.markdown("<h1 style = 'text-align: center;'>”ò—É–µ–∑–æ–≤ –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "5,8", "+0,6")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "4,4%", "-0,7%", delta_color="inverse")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "0,9", "-0,1", delta_color="inverse")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "”ò—É–µ–∑–æ–≤—Å–∫–∏–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="”ò—É–µ–∑–æ–≤—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="”ò—É–µ–∑–æ–≤—Å–∫–∏–π", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "”ò—É–µ–∑–æ–≤—Å–∫–∏–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="”ò—É–µ–∑–æ–≤—Å–∫–∏–π")
            st.plotly_chart(fig_in, use_container_width=True)

    #–ë–æ—Å—Ç–∞–Ω–¥—ã–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ë–æ—Å—Ç–∞–Ω–¥—ã“õ":
        st.markdown("<h1 style = 'text-align: center;'>–ë–æ—Å—Ç–∞–Ω–¥—ã“õ –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "6,1", "+0,6")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "8,3%", "0%", delta_color="off")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "1,4", "+0,7", delta_color="inverse")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–ë–æ—Å—Ç–∞–Ω–¥—ã“õ", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–ë–æ—Å—Ç–∞–Ω–¥—ã“õ")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–ë–æ—Å—Ç–∞–Ω–¥—ã“õ", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–ë–æ—Å—Ç–∞–Ω–¥—ã“õ")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–ë–æ—Å—Ç–∞–Ω–¥—ã“õ")
            st.plotly_chart(fig_in, use_container_width=True)

    #–ñ–µ—Ç—ã—Å—É—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ñ–µ—Ç—ñ—Å—É":
        st.markdown("<h1 style = 'text-align: center;'>–ñ–µ—Ç—ñ—Å—É –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "6,4", "+1,1")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "4,8%", "-0,2%", delta_color="inverse")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "1,7", "+0,2", delta_color="inverse")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–ñ–µ—Ç—ñ—Å—É", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–ñ–µ—Ç—ñ—Å—É")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–ñ–µ—Ç—ñ—Å—É", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–ñ–µ—Ç—ñ—Å—É")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–ñ–µ—Ç—ñ—Å—É")
            st.plotly_chart(fig_in, use_container_width=True)

    #–ú–µ–¥–µ—É—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ú–µ–¥–µ—É":
        st.markdown("<h1 style = 'text-align: center;'>–ú–µ–¥–µ—É –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "6,8", "+0,9")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "6,3%", "0%", delta_color="off")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "0,2", "-0,1", delta_color="inverse")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–ú–µ–¥–µ—É", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–ú–µ–¥–µ—É")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–ú–µ–¥–µ—É", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–ú–µ–¥–µ—É")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–ú–µ–¥–µ—É")
            st.plotly_chart(fig_in, use_container_width=True)

    #–ù–∞—É—Ä—ã–∑–±–∞–π—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–ù–∞—É—Ä—ã–∑–±–∞–π":
        st.markdown("<h1 style = 'text-align: center;'>–ù–∞—É—Ä—ã–∑–±–∞–π –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")
        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "6,3", "+0,5")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "4,7%", "-0,6%", delta_color="inverse")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "0,3", "0", delta_color="off")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–ù–∞—É—Ä—ã–∑–±–∞–π", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–ù–∞—É—Ä—ã–∑–±–∞–π")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–ù–∞—É—Ä—ã–∑–±–∞–π", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–ù–∞—É—Ä—ã–∑–±–∞–π")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–ù–∞—É—Ä—ã–∑–±–∞–π")
            st.plotly_chart(fig_in, use_container_width=True)

    #–¢—É—Ä–∫—Å–∏–±—Å–∫–∏–π —Ä–∞–π–æ–Ω
    if opt == "–¢“Ø—Ä–∫—Å—ñ–±":
        st.markdown("<h1 style = 'text-align: center;'>–¢“Ø—Ä–∫—Å—ñ–± –∞—É–¥–∞–Ω—ã üèôÔ∏è</h1>", unsafe_allow_html=True)
        st.markdown("---")
        col4, col5, col6 = st.columns(3)
        st.markdown("---")
        col1, col2, col3 = st.columns(3)
        st.markdown("---")

        col7, col8 = st.columns(2)

        col4.metric("–ë–∞“õ—ã—Ç –¥–µ“£–≥–µ–π—ñ", "7,3", "+0,5")
        col5.metric("–ñ“±–º—ã—Å—Å—ã–∑–¥—ã“õ", "5%", "+0,1%", delta_color="inverse")
        col6.metric("–õ–∞—Å—Ç–∞—É—à—ã –∑–∞—Ç—Ç–∞—Ä–¥—ã“£ —à—ã“ì–∞—Ä—ã–Ω–¥—ã–ª–∞—Ä—ã", "1,4", "-0,1", delta_color="inverse")

        with col1:
            st.subheader("“ö—ã–ª–º—ã—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞—Å—ã")
            fig_cr = px.pie(df7, "–ñ—ã–ª", "–¢“Ø—Ä–∫—Å—ñ–±", hole=0.5)
            st.plotly_chart(fig_cr, use_container_width=True)

        with col2:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É “±–∑–∞“õ—Ç—ã“ì—ã")
            fig_in = px.scatter(df2, x="–ñ—ã–ª", y="–¢“Ø—Ä–∫—Å—ñ–±")
            st.plotly_chart(fig_in, use_container_width=True)

        with col3:
            st.subheader("”®–º—ñ—Ä —Å“Ø—Ä—É –¥–µ“£–≥–µ–π—ñ")
            fig_lw = px.bar(df5, x="–¢“Ø—Ä–∫—Å—ñ–±", y="–ñ—ã–ª", orientation="h")
            st.plotly_chart(fig_lw, use_container_width=True)

        with col7:
            st.subheader("–¢“±—Ä“ì—ã–Ω “Ø–π –±–∞“ì–∞—Å—ã")
            fig_hp = px.line(df1, "–ñ—ã–ª", "–¢“Ø—Ä–∫—Å—ñ–±")
            st.plotly_chart(fig_hp, use_container_width=True)

        with col8:
            st.subheader("–ï“£–±–µ–∫–∞“õ—ã")
            fig_in = px.line(df4, x="–ñ—ã–ª", y="–¢“Ø—Ä–∫—Å—ñ–±")
            st.plotly_chart(fig_in, use_container_width=True)
    #–ë–æ–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    st.sidebar.markdown("---")
    # –ù–∏–∂–Ω—è—è –∫–∞—Ä—Ç–∏–Ω–∞ –≤ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    img_path = "AlmatyDC_level_of_happiness\gh7.jpg"  # Replace with the actual image path
    img_base64 = img_to_base64(img_path)
    st.sidebar.markdown(
        f'<a href="https://github.com/aydarbek30/AlmatyDC_happiness_level.git"><img src="data:image\png;base64,{img_base64}" class="cover-glow"></a>',
        unsafe_allow_html=True,
    )
    #–†–µ–∫–≤–µ–∑–∏—Ç—ã
    st.sidebar.markdown("---")
    st.sidebar.markdown('''<small>–ü—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ –∂–æ–±–∞ | 2024 –∂—ã–ª“ì—ã –º–∞—É—Å—ã–º-—à—ñ–ª–¥–µ | –ê–π–¥–∞—Ä–±–µ–∫, –ê—Å–∞–Ω, –ú“±—Ö—Ç–∞—Ä—Ö–∞–Ω</small>''',
                        unsafe_allow_html=True)